import * as fs from "fs";

let output = `// NOTE: this file is generated by generate-interface.ts, do not edit by hand\n\nimport * as t from "io-ts";\n\n`;

for (const f of fs.readdirSync("./src/mbql-schema")) {
  if (/\.ts$/.test(f) && f !== "interface.ts") {
    const importPath = f.replace(/\.ts$/, "");
    const mod = require("../src/mbql-schema/" + f);
    let imports = [];
    let exports = [];
    for (const exp in mod) {
      if (mod[exp] && mod[exp]._tag) {
        imports.push(exp);
        exports.push(`export type I${exp} = t.TypeOf<typeof ${exp}>;`);
      }
    }
    if (imports.length > 0) {
      output += `import {\n  ${imports.join(
        ",\n  "
      )}\n} from "./${importPath}";\n\n`;
      output += exports.join("\n") + "\n\n";
    }
  }
}

fs.writeFileSync("./src/mbql-schema/interface.ts", output);
